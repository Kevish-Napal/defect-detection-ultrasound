%function [f,g,H,p] = CalculHessienne(x)
function [grad Hess] = ComputeGradHessianSym(Feta,x)
global alphap gammap  rhs cetap
pdSc=x'*(Feta*x);% produit scalaire  													 
abspdSC=abs(pdSc);

pdSc2=x'*(Feta*x-rhs);														
abspdSC2=abs(x'*(Feta*x-rhs));
Idt=eye(length(x),length(x)); %matrice identit√©


grad=gammap/2*x+Feta'*(Feta*x-rhs)*1/2 ...
    +alphap/(2*abspdSC)*( conj(pdSc)*(Feta*x)+ pdSc*Feta'*x )...
    +cetap/(2*abspdSC2)*( conj(pdSc2)*(Feta*x-rhs)+ pdSc2*Feta'*x )  ;

Hess=gammap*Idt+Feta'*Feta ...
    +alphap/(2*abspdSC)*( conj(pdSc)*Feta + Feta*x*x'*Feta'...
               + pdSc * Feta' +Feta'*x*x'*Feta) ...
    - alphap/(4*abspdSC^(3/2))* (conj(pdSc)*Feta*x+ pdSc*Feta'*x) ...
               * transpose(conj(pdSc)*transpose(Feta)*conj(x)+ pdSc*conj(Feta*x))...
    +cetap/(2*abspdSC2)*( conj(pdSc2)*Feta + (Feta*x-rhs)*(Feta*x-rhs)'...
               + pdSc2 * Feta' +Feta'*x*x'*Feta) ...
    - cetap/(4*abspdSC2^(3/2))* (conj(pdSc2)*(Feta*x-rhs)+ pdSc2*Feta'*x) ...
               * transpose(conj(pdSc2)*transpose(Feta)*conj(x)+ pdSc2*conj(Feta*x-rhs))...
           ;

end







